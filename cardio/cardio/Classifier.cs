using System;
using System.Linq;
using static System.Math;

namespace cardio
{
    internal struct Classifier
    {
        static double[] mulxs (double[] xs, double[] ys) => Lin<double, double>.opxs2(( (x, y) => x * y ), 0, ( new double[xs.Length] ), xs, ys);

        static double[] addxs (double[] xs, double[] ys) => Lin<double, double>.opxs2(( (x, y) => x + y ), 0, ( new double[xs.Length] ), xs, ys);

        static double[] ws (int i, double[] acc, double[] i_xs, double[][] ws_xs)
        {
            if ( i > ( ws_xs.Length - 1 ) ) { return acc; }
            acc[i] = mulxs(i_xs, ws_xs[i]).Sum();
            return ws(( i + 1 ), acc, i_xs, ws_xs);
        }

        static double[] ws (double[] i_xs, double[][] ws_xss, double[] b_xs) => addxs(b_xs, ( ws(0, ( new double[ws_xss.Length] ), i_xs, ws_xss) ));

        static double[] ff (
            Func<double[], double[][], double[], double[]> f,
            Func<Func<double, double>, double[], double[]> fmap,
            double[] inputs)
        {
            var firstHiddenLayerWeights = new double[][]
            {
                new [] { 1.726281808, -3.654357537, 0.537142092, -7.07135477, -2.256975369, -0.7940866435, -1.213602292 },
                new [] { 0.9145099682, -0.7068201194, -0.935228927, 1.664930999, 1.125694609, 0.761819344, 1.013573637 },
                new [] { -0.6117482449, -0.837369781, 0.2285114287, -0.8287770466, 6.392127843, 0.1256154636, 2.92461257 },
                new [] { -3.534252779, -5.290860967, 0.360950828, -2.508273421, 1.904448799, 0.671905326, 3.654652122 },
                new [] { 5.299449096, -5.062333147, 1.427488028, 2.500663245, 1.878716237, 1.017709897, 2.075505693 },
                new [] { -2.669645158, 8.402094978, 0.4208968611, 0.7517770645, 0.9030522328, 0.7055006023, 1.157783545 },
                new [] { 0.190001696, 4.527113937, 1.202078967, -1.614895953, 0.2476088163, -0.6216961795, -0.505429305 },
                new [] { 0.698495376, 6.146216178, -0.1615875242, 0.08715846116, 3.173732066, 0.8996711787, 1.025651132 },
                new [] { -0.3593885325, 2.032299941, 3.844176294, -9.176315707, -4.871621287, -0.9928479914, 3.951703723 },
                new [] { -1.02824285, 6.071786973, 0.6703246096, 0.8240747304, 2.490067237, 1.028164132, 1.526152574 }
            };
            var firstHiddenLayerBias = new[] { -1.174995304, -0.5308293614, -0.1459036789, 1.370614004, -2.986152089, 1.302194378, -0.9339367268, -0.4650364059, 0.4175758211, -0.6261257587 };
            var firstHiddenWeightedSum = f(inputs, firstHiddenLayerWeights, firstHiddenLayerBias);
            var firstHiddenNetOutputs = firstHiddenWeightedSum.Select(Tanh).ToArray();

            var secHiddenLayerWeights = new double[][]
            {
                new [] { 3.593616455, 0.6573932997, 4.773306211, 3.421190959, 4.741637129, -5.400577376, -2.868604026, 1.207042627, 0.1680596223, -4.883681135 },
                new [] { 5.988640048, -2.451498621, 0.006509786615, 5.146810636, -5.465599992, -2.696425868, 3.21534413, -3.676445104, 9.708397944, 0.8725269354 },
                new [] { 0.006564210884, 0.1350889479, 0.3997738036, 0.3923544062, -0.059506501, -0.4016720287, -0.003846411874, -0.5531319045, -0.1599027475, -0.1878434774 },
                new [] { -1.117998343, 0.12756794, 1.757414892, -1.187957115, -0.03379757443, -0.4294342182, 0.3456648526, -1.927628054, -0.4422991529, -0.0464167116 },
                new [] { -0.08250938446, 0.2090950114, 0.1709865896, 0.7286006938, 0.2256582578, -0.5219112359, -0.07081632068, 0.6775586385, 0.4031370587, 0.7609691937 },
                new [] { 0.4115042181, -0.3977266509, -0.8881097521, -0.4002101428, -0.1437509611, 0.6236012139, -0.1394600089, -0.004568496093, 0.239837531, 0.1506719304 },
                new [] { 0.3114711516, 0.665294265, -1.970315482, 4.068437999, -0.3271810699, 1.544609945, -0.1492158931, -1.21682281, 0.4766890969, 1.880151042 },
                new [] { 0.1504099641, -0.7234894885, -2.140861549, -0.07104646203, 0.08815223069, 1.190553954, 0.3982424584, 1.035756909, -0.006999053232, -0.3326504712 },
                new [] { 1.492333244, 0.3065644182, -1.662657036, -0.2700319477, 3.123000689, -0.8969118629, -0.8124379536, -1.782670912, 1.521321442, -0.03831239805 },
                new [] { 0.615112193, 0.1494468573, -0.4795026101, -0.7849598083, -0.04818084373, 2.283872996, 1.150335914, 1.578760203, -0.1586200703, -0.8218845669 }
            };
            var secHiddenLayerBias = new[] { -0.699734971, -3.132900567, 1.74920407, -0.5229081871, 0.9983439443, 0.2654260609, -0.6495168154, -1.85842874, -1.224193, -1.70780481 };
            var secHiddenWeightedSum = f(firstHiddenNetOutputs, secHiddenLayerWeights, secHiddenLayerBias);
            var secHiddenNetOutputs = secHiddenWeightedSum.Select(Tanh).ToArray();

            var outputLayerWeights = new double[][]
            {
                new [] { -0.2247283172, 0.09174386932, 0.02918685363, 0.3955840698, 0.08049351286, 0.402816426, 0.2566540433, 0.1878389645, 0.0310532791, -0.4725924912},
                new [] { 0.09407953105, 0.1883419936, 1.110169594, -0.2969248134, -0.4182465048, -0.4770819635, -0.1625491799, 0.7724049868, -0.016106866, 0.4190237911},
                new [] { -0.01383037811, 0.2960953414, 0.3706114766, 0.1609421046, 0.2482632579, 0.306240307, 0.08355896127, 0.114103727, -0.03025850249, -0.1010267164},
                new [] { -0.002161124466, 0.7726468425, 0.07767010181, 0.2509410599, 0.3811518787, 0.3282886052, 0.1506891106, 0.2677240596, 0.01068974533, -0.1355277339},
                new [] { -0.01205407567, 0.3178001276, 0.5471316748, 0.2657302795, 0.3071523247, 0.2795036379, 0.1677669581, 0.2821240187, 0.09026716979, -0.04281364267},
                new [] { -0.1679868464, 0.7301158052, 0.2067576898, 0.309905898, 0.4624099716, 0.379333787, 0.1886810123, -0.7552076401, 0.1637129867, 0.6482509813},
                new [] { 0.3152539732, 0.3074824395, 0.4272404012, 0.09937055852, 0.3568472204, -0.001252676324, -0.4842298395, 0.2965343753, -0.4253043711, -0.2044746814},
                new [] { 0.003185421846, 0.0147879532, 0.4595941053, 0.1084169372, 0.1986785644, 0.1369402444, 0.9421718609, 0.1515499022, 0.002395559057, -0.01056331462},
                new [] { 0.01229553541, 0.9949111717, 0.5707429817, 0.1226082669, 0.3723834505, 0.376929203, 0.05817434644, 0.1120186156, 0.01357500931, -0.05050360821},
                new [] { 0.03405416427, 0.3395262068, 0.30983338, 0.08572709147, 0.2198022165, 0.2420675832, 0.03795175732, 0.04983253452, 0.2001719787, -0.008598148362},
                new [] { 0.07790858126, 0.1011500192, 1.124900389, 0.7820351866, 0.4926669283, 0.921107303, -0.0560566102, 0.6100140528, -0.48410874, 0.8506866083},
                new [] { 0.03509922079, 0.0309950889, 0.3869894233, 0.11159615, 0.2686646989, 0.2029735843, 0.03119030324, 0.1366887931, 0.270467283, -0.03481506217},
                new [] { 0.02026104164, 0.04881579955, 0.6594226675, 0.09349374659, 0.3466535185, 0.3233205209, 1.013976173, 0.1143656709, 0.01261207352, -0.02655530324}
            };
            var outputBias = new[] { 0.3791637524, 0.1708510745, 0.01074344215, 0.7961274689, 0.1055304186, 0.5763772184, -0.458935533, 0.5881191716, 0.5037707702, 0.2698262498, 0.7204214873, 0.02517360795, 0.4712613344};
            var outputWeigtedSum = f(secHiddenNetOutputs, outputLayerWeights, outputBias);
            var output = outputWeigtedSum.Select(Tanh).ToArray();

            return output;
        } 

        internal static double[] Classify (Func<double, double> percentConv, double[] inp_xs) => Lin<double, double>.mapxs(percentConv, ff(ws, Lin<double, double>.mapxs, inp_xs));
    }
}