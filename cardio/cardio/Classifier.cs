using System;
using System.Linq;

namespace cardio
{
    internal struct Classifier
    {
        static double[] mulxs(double[] xs, double[] ys) => Lin<double, double>.opxs2(((x, y) => x * y), 0, (new double[xs.Length]), xs, ys);

        static double[] addxs(double[] xs, double[] ys) => Lin<double, double>.opxs2(((x, y) => x + y), 0, (new double[xs.Length]), xs, ys);

        static double[] ws(int i, double[] acc, double[] i_xs, double[][] ws_xs)
        {
            if (i > (ws_xs.Length - 1)) { return acc; }
            acc[i] = mulxs(i_xs, ws_xs[i]).Sum();
            return ws((i + 1), acc, i_xs, ws_xs);
        }

        static double[] ws(double[] i_xs, double[][] ws_xss, double[] b_xs) => addxs(b_xs, (ws(0, (new double[ws_xss.Length]), i_xs, ws_xss)));

        static double[] ff(Func<double[], double[][], double[], double[]> f, Func<Func<double, double>, double[], double[]> fmap, double[] inputs)
            => fmap(Math.Tanh, f(fmap(Math.Tanh, f(inputs,
                new double[][] {
                    new double [] { 1.617183417, 2.027189713, 1.042669269, -1.655275075, -4.741735894, -0.4601574696, -1.013398018 },
                    new double [] { -2.342858129, 15.4301751, 0.7492437121, 0.8571914505, 9.211495184, 1.144883459, 5.501218558 },
                    new double [] { 1.328377685, -1.733222076, -0.3943794495, -0.2976924379, -1.135670057, -0.5581586369, -4.148988189 },
                    new double [] { -3.783553889, 11.95646354, 0.6553767089, 0.6133576806, 0.7906332642, 1.039432243, 2.156637837 },
                    new double [] { -3.033252109, -7.120901804, 0.3082582586, -2.346525087, 2.222377818, 0.9447299523, 5.712497345 },
                    new double [] { 6.490007474, -12.69774608, 0.9792601538, -0.4083717115, -4.970328437, -0.7573378575, -3.610962791 },
                    new double [] { -0.3848462657, -1.283062073, 0.1805221007, 0.860386955, 9.430692397, 1.124397382, 5.690230482 },
                    new double [] { -1.693839902, 2.009278636, -0.01380512085, 1.029771447, 0.3529598775, 0.5486225503, 0.3863411742 },
                    new double [] { 0.8767166361, 5.504175924, 0.1162832526, 6.946029623, 3.290785602, 0.2870175807, 0.9351321447 },
                    new double [] { 0.400532698, -3.889397625, -0.3757805434, -1.297713852, 0.2351770944, -0.3698195189, 0.4604490652 } },
                new double[] { -1.490130618, -0.006227647394, -0.5975587761, 0.8673429233, -0.2730059483, -1.840313838, -0.3946680841, 0.8785324386, 0.5703844691, -0.4851962938 })),
                new double[][] {
                    new double [] { 0.09691466595, -1.298191469, -0.1464954613, -0.2740435394, 0.09806525833, -1.27054599, 0.05370597635, -0.7681514072, 1.848908304, -0.6884934809 },
                    new double [] { -2.560747409, 1.429486392, -0.7513368873, -0.2269161899, -0.017728684, 0.5497162148, -1.481527977, -0.4834782617, -0.707086268, -0.209736093 },
                    new double [] { 0.002330821498, -0.1904713756, 0.01035674958, -0.1008833656, 0.03310084279, -0.2587120455, 0.008159118668, -0.03487750915, -0.1472649396, -0.1757019434 },
                    new double [] { 1.032049692, 0.01030276471, 0.1401050726, -0.07550127155, -0.02926092455, 0.004804011701, 0.09132594339, 0.8102069938, 0.2076706062, 0.3843202435 },
                    new double [] { -0.01176155705, -0.006639578326, 0.048785703, 0.0350189117, 0.03159601629, 0.1409700353, 0.003264395231, -0.06374903695, 0.2901835466, -0.1006129485 },
                    new double [] { 0.6222968215, -0.6680998902, -0.114956058, 1.896868225, -0.9760533813, 0.8061247774, 1.084999572, 0.06827918689, -0.1083410091, 1.11238503 },
                    new double [] { -0.2107308524, 0.5622242948, -0.7783884693, -1.929789579, 0.02426112743, -1.01629852, -0.1462311229, -0.934576994, 0.02801082453, -0.8869478349 },
                    new double [] { 0.230933892, 0.08870159029, 0.9142806037, 0.2200276513, 0.7895117331, 0.2737648012, 0.1040790364, 1.028840974, -0.08400652661, 0.07798473105 },
                    new double [] { -0.04752261169, 0.07033862981, -0.05348201334, -0.03396234591, 0.02199630188, 0.1062240496, -0.01194281779, 0.08194883186, -0.9123161714, -0.1012240001 },
                    new double [] { 0.04232934019, 0.3745921823, 0.07509872206, 0.2288399287, -0.0696919356, 0.9169033376, 0.01480702679, 0.6419123979, -0.8469633627, 0.4673223865 },
                    new double [] { 1.463350572, -0.578145645, 1.02992324, 1.019681401, -1.223959039, -1.283106586, 0.2743865826, 0.06016938963, 2.465406518, 1.329251609 },
                    new double [] { -0.2373366124, 0.4654951762, -0.566315624, -0.04570458116, 0.01406859908, 0.9818657993, -0.09321966575, -0.5041494161, -0.6087441016, -0.2858058574 },
                    new double [] { 0.1997830062, 0.1643395236, 0.9418024156, 0.1948331026, 0.8665034936, 0.3968650669, 0.1030081769, 1.169858264, -1.015685823, -0.06082543335 } },
                new double[] { -1.49358229, -1.460407455, 0.09133088099, 0.5046917366, -0.1475387094, 0.5741183345, -0.4198145916, 0.8675773847, 0.7705503785, 1.07144582, -0.3413371522, 0.7768373371, 1.700322284 }));

        internal static double[] classify(Func<double, double> percentConv, double[] inp_xs) => Lin<double, double>.mapxs(percentConv, ff(ws, Lin<double, double>.mapxs, inp_xs));
    }
}