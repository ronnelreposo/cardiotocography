using System;
using System.Linq;
using static System.Math;

namespace cardio
{
    internal struct Classifier
    {
        static double[] mulxs (double[] xs, double[] ys) => Lin<double, double>.opxs2(( (x, y) => x * y ), 0, ( new double[xs.Length] ), xs, ys);

        static double[] addxs (double[] xs, double[] ys) => Lin<double, double>.opxs2(( (x, y) => x + y ), 0, ( new double[xs.Length] ), xs, ys);

        static double[] ws (int i, double[] acc, double[] i_xs, double[][] ws_xs)
        {
            if ( i > ( ws_xs.Length - 1 ) ) { return acc; }
            acc[i] = mulxs(i_xs, ws_xs[i]).Sum();
            return ws(( i + 1 ), acc, i_xs, ws_xs);
        }

        static double[] ws (double[] i_xs, double[][] ws_xss, double[] b_xs) => addxs(b_xs, ( ws(0, ( new double[ws_xss.Length] ), i_xs, ws_xss) ));

        static double[] ff (
            Func<double[], double[][], double[], double[]> f,
            Func<Func<double, double>, double[], double[]> fmap,
            double[] inputs)
        {
            var firstHiddenLayerWeights = new double[][]
            {
                new[] { -0.654003,2.314158,0.493312,0.476613,1.914482,0.262842,2.081802 },
                new[] { 0.357751,1.517412,0.529187,1.547404,0.942050,0.640491,1.254459 },
                new[] { -0.017900,0.481881,1.893636,-0.954523,-0.753291,-0.077338,0.386159 },
                new[] { 0.478765,-0.070235,0.749122,-0.200884,-5.101245,-0.728826,-2.847130 },
                new[] { 1.349922,-1.863778,0.017977,-0.728422,1.014810,-0.552386,-0.133181 },
                new[] { -1.500420,7.560048,-0.544892,-0.321916,-1.477398,0.030186,-2.506646 },
                new[] { 0.284785,0.510351,-0.278129,2.085007,-2.330078,-0.626934,-3.178440 },
                new[] { 0.405581,0.578759,-0.769894,0.761248,1.132580,-0.730025,0.299200 },
                new[] { -0.239631,0.624798,0.043355,0.614299,-1.072133,0.085583,-0.736102 },
                new[] { 0.802870,-0.224736,0.008100,-0.057334,-0.207612,0.159554,0.262907 },
                new[] { -0.922223,1.393511,0.714809,-0.375752,-0.171038,-0.002899,2.971253 },
                new[] { -1.351373,2.360034,-0.615474,0.127169,2.796303,1.018495,1.843339 },
                new[] { -1.608627,0.523183,-2.176301,0.559431,1.461498,-0.673965,-2.546776 },
                new[] { 0.705686,-1.890541,0.492380,-0.314711,1.806011,-0.013500,1.283685 },
                new[] { 1.926038,-0.507905,0.732066,-2.379913,-1.009493,0.514951,-0.920140 },
                new[] { -1.918042,-0.330791,-0.726930,-0.205205,-0.854658,-0.382070,-0.354041 },
                new[] { -1.941753,-3.755064,-0.534683,-0.195468,-0.780505,0.443084,-1.138575 },
                new[] { -0.783815,-0.610486,-0.024157,-0.335105,0.164029,0.405893,0.429613 },
                new[] { 0.724009,1.144912,-0.106804,-0.681914,-0.143789,0.712112,0.781053 },
                new[] { 0.472526,-0.207832,0.515700,1.029861,-0.675967,0.928027,-0.488906 }
            };
            var firstHiddenLayerBias = new[] { -0.040688, -0.140077, 0.319885, 0.438396, -0.449116, 0.226904, 0.577918, -0.174604, -0.793743, -0.668666, -0.638009, 0.066423, 0.414715, 0.109319, -0.697806, 0.170422, 0.475431, -0.103804, -0.129831, -0.409009 };
            var firstHiddenWeightedSum = f(inputs, firstHiddenLayerWeights, firstHiddenLayerBias);
            var firstHiddenNetOutputs = firstHiddenWeightedSum.Select(Tanh).ToArray();

            var secHiddenLayerWeights = new double[][]
            {
                new[] { 1.835165,1.778718,0.777025,-1.640968,0.248600,2.265495,-1.295415,1.137697,-0.599951,0.162418,1.770186,2.232648,-0.544123,0.954260,0.025836,-1.048777,-1.492839,-0.343804,0.919683,-0.695637 },
                new[] { 1.185891,1.344280,0.656637,0.721942,0.522515,0.384549,0.617886,0.879301,0.660731,0.280111,0.584807,1.118147,0.444483,-0.144233,0.213380,-0.020019,-0.263211,0.261044,0.115233,0.327047 },
                new[] { 0.220843,-0.172657,0.633308,-0.230401,0.731644,0.332569,0.442416,-0.164254,-0.246756,0.302519,0.283783,0.143428,0.186656,0.158596,0.271289,-0.225072,0.308037,0.138529,0.391502,-0.102282 },
                new[] { 0.640841,1.000944,0.341646,0.303169,0.221535,0.353797,-0.505227,1.078652,0.564395,0.536782,0.224194,-0.325215,-0.331023,0.629210,1.099671,-0.806604,-1.296114,-0.024232,0.608156,0.564196 },
                new[] { 0.371564,0.021556,0.810022,-0.280670,-0.180611,1.091942,-0.038257,0.371964,0.562552,0.050282,0.366921,0.561712,0.322455,0.488090,-0.406132,0.566652,0.071061,0.593460,0.641726,-0.040823 },
                new[] { -0.523395,0.168972,0.742298,2.674699,-0.969988,1.073954,1.102563,-0.864822,1.704693,1.371061,0.994332,-0.067023,-1.645160,-1.326089,1.706231,-0.102742,0.523313,0.677776,0.462301,1.304967 },
                new[] { -0.907950,-0.742985,0.329612,0.221814,1.384818,-2.098507,0.391310,0.032134,1.047686,0.898442,-0.541043,-0.331313,-0.297351,0.526904,2.009801,0.523390,1.050010,0.650455,-0.130818,0.410489 },
                new[] { 0.063984,0.534217,0.098018,0.270334,0.262083,0.344216,0.621879,0.438523,0.302186,-0.243120,0.208999,-0.570421,0.529290,0.368364,0.021011,0.510452,0.400514,0.331646,0.237404,0.334697 },
                new[] { -0.359308,0.354485,0.737657,1.936721,0.571702,2.040387,1.412633,0.494492,1.343465,1.110858,-0.316690,-0.374160,0.223629,-0.654612,0.528716,0.549845,-0.183642,0.660998,0.085846,0.152776 },
                new[] { -0.903657,-0.996197,1.455831,1.310380,0.371978,-0.152483,-0.342895,-0.616961,0.235320,0.594031,1.039773,-0.615632,-0.439448,0.330919,0.779324,0.777391,1.764297,0.837132,0.716943,-0.272132 },
                new[] { 0.224223,0.460847,0.133435,-0.559603,0.595164,0.532347,0.756622,0.475272,-0.036212,-0.180540,0.574765,0.734296,-0.084739,0.476928,-0.485129,-0.095829,0.485868,0.436269,0.293097,0.017964 },
                new[] { 1.052840,0.128635,0.347118,0.199240,-0.698120,2.382303,0.742419,0.363581,0.628080,0.038363,-0.350403,1.081826,0.624213,-0.911690,-0.071230,0.569088,-0.035257,0.309409,0.041387,-0.121701 },
                new[] { 0.681362,0.433029,-0.478618,0.614672,-0.285031,-0.623122,-1.071588,0.262553,-0.115389,0.381025,1.048658,-0.557066,0.720172,0.045719,0.738587,0.270618,0.928007,0.583437,0.076770,0.167155 },
                new[] { 0.422527,0.199860,0.392051,-0.839480,-0.379056,1.771507,1.444363,-0.177267,0.171292,-0.109686,0.895901,0.869495,1.171268,0.535236,0.115457,0.726194,0.017456,0.051194,-0.162014,-0.247283 },
                new[] { -0.963017,-1.010474,0.254459,1.871141,0.268997,0.238067,1.942725,-0.205338,1.293747,1.149266,0.153319,-1.449787,0.219146,-0.789502,1.509272,0.380884,0.909495,0.398335,-0.770927,0.281298 },
                new[] { -0.271535,-0.065808,0.171208,-1.292998,0.329427,0.919008,-0.555832,0.172806,0.189681,0.752092,0.733242,-0.293114,-0.257253,0.513574,-0.493770,0.076167,-0.183177,0.672630,0.023500,0.554136 },
                new[] { -1.454378,-0.019174,-0.263816,0.684642,0.614644,-3.170958,0.530849,0.469891,-0.037541,0.378938,0.765820,-0.731333,-0.340680,1.737509,0.639878,0.226718,2.358401,0.229886,-0.383955,0.308569 },
                new[] { 0.352626,-0.004452,-0.082872,-0.184988,0.363481,-1.342886,-0.728936,0.242073,0.895567,0.907203,-0.573449,-0.263566,-0.908562,0.303815,0.683707,0.590251,-0.730180,-0.029725,0.597307,-0.062501 },
                new[] { -1.075966,-0.440793,-0.497098,-0.462371,-0.221301,-0.395705,-0.375428,-0.101744,0.379500,-0.088628,0.592357,-0.514825,0.315259,-0.785914,-0.665116,-0.059189,0.841300,0.321531,-0.459608,-0.217087 },
                new[] { 0.406150,0.622104,0.817564,1.171985,0.532374,0.670049,1.216227,0.689685,0.200235,0.064841,-0.723673,0.195732,0.585675,-0.091717,0.159088,-0.202270,-0.249355,-0.079381,0.795605,0.093573 }
            };
            var secHiddenLayerBias = new[] { 1.292169, 1.006417, 0.883876, 0.945582, 0.366379, -0.664627, 0.028584, 0.994390, -0.716225, 0.271124, 0.127761, 0.635931, 0.811844, 0.699231, -0.982869, 0.487458, 1.085388, -0.178876, 0.707991, 0.302555 };
            var secHiddenWeightedSum = f(firstHiddenNetOutputs, secHiddenLayerWeights, secHiddenLayerBias);
            var secHiddenNetOutputs = secHiddenWeightedSum.Select(Tanh).ToArray();

            var outputLayerWeights = new double[][]
            {
                new[] { -0.651823,-0.562126,-0.267139,0.041059,-0.005116,0.019858,-0.266556,0.052900,-0.020143,-0.593072,0.021736,0.455058,0.356702,0.817761,0.231318,-0.021148,0.422846,1.126928,-0.351472,0.494203 },
                new[] { 0.453453,0.439856,0.699103,-0.173760,-0.709862,-0.947557,0.352260,0.568560,1.107757,0.079846,-0.090290,-0.145117,0.026239,-0.433347,-0.429163,0.646142,-0.626287,-0.135075,1.255204,-0.097516 },
                new[] { -0.055184,-0.258152,0.042685,0.223511,0.019990,0.009749,-0.253208,0.063177,0.009793,0.171842,0.058694,-0.001016,0.039159,0.025981,-0.160637,0.007805,-0.034332,0.089980,0.316565,0.062459 },
                new[] { -0.048687,-0.189021,0.032435,0.219466,0.024735,0.511013,-0.029625,-0.089321,0.027140,-0.001913,0.249125,0.063058,0.034386,-0.038508,-0.069739,-0.089431,-0.007178,0.052834,0.306754,0.087881 },
                new[] { 0.010079,0.173474,-0.164036,0.161365,0.105222,-0.025777,-0.140227,-0.146948,-0.055640,0.038104,-0.190150,-0.072893,-0.063383,-0.135598,0.052022,-0.070320,0.021385,-0.273003,0.044016,-0.038717 },
                new[] { 0.154940,-0.360602,-0.159224,0.608324,0.488735,0.320414,-0.204103,0.832366,-0.604661,0.057997,-0.244557,0.509867,-0.211045,-0.532732,0.105755,1.588940,-0.110445,0.214414,1.018817,1.153792 },
                new[] { 0.608345,-0.207237,0.466213,0.222498,-0.139778,0.020170,0.000663,0.225048,0.149264,-0.300748,0.283569,-0.491988,-0.556757,0.547800,0.872963,0.181771,0.441669,0.012128,0.852248,-0.035983 },
                new[] { -0.018667,0.187407,0.328612,0.200571,-0.055782,0.006946,0.083628,0.510609,-0.003877,-0.121456,0.106556,0.014808,1.471967,0.018670,0.152537,0.028157,0.018964,-0.183771,-0.050076,-0.276787 },
                new[] { 0.045211,0.091516,-0.065683,0.179765,0.062388,0.017085,0.010978,0.031736,-0.008451,0.319986,-0.016593,0.009754,0.086649,-0.000940,0.005455,0.003589,-0.002633,0.164226,0.379799,0.210398 },
                new[] { -0.095057,0.397452,0.069189,0.260989,0.052958,-0.018043,0.598053,0.069051,-0.041278,0.087143,-0.163519,-0.059347,-0.101452,0.012779,-0.306865,-0.030457,0.007173,-0.111015,0.222025,-0.176559 },
                new[] { 0.151785,0.782333,1.297297,-1.104413,0.732846,-0.049570,0.737651,1.029127,0.245076,-0.843484,0.650076,0.630181,-0.262865,-0.025165,0.767770,0.277907,-0.015947,0.729697,0.777977,0.935801 },
                new[] { -0.008410,0.246707,-0.177897,0.217441,0.055944,-0.007754,0.405899,0.016839,-0.036929,0.052552,-0.152997,-0.024799,-0.414832,-0.307466,-0.268004,-0.014359,0.014894,-0.069193,0.076812,-0.150624 },
                new[] { 0.007713,0.362243,0.385103,0.435359,-0.017797,0.013139,0.124274,0.601435,-0.002498,0.236224,0.111743,0.023308,1.676877,0.007796,0.065487,0.043620,0.012045,-0.036626,0.400906,-0.062020 }
            };
            var outputBias = new[] { 0.492875, 0.148895, 0.021581, 0.511629, -0.156306, 0.488987, 0.105666, 0.559389, 0.411286, 0.018544, 1.042442, 0.027598, 0.861863 };
            var outputWeigtedSum = f(secHiddenNetOutputs, outputLayerWeights, outputBias);
            var output = outputWeigtedSum.Select(Tanh).ToArray();

            return output;
        } 

        internal static double[] Classify (Func<double, double> percentConv, double[] inp_xs) => Lin<double, double>.mapxs(percentConv, ff(ws, Lin<double, double>.mapxs, inp_xs));
    }
}